{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl, ADD_ROOM_STYLE, LOAD_ROOM_STYLE } from \"./constant\";\nimport axios from \"axios\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: \"\",\n  addMessage: '',\n  roomStyles: [],\n  roomStyle: {}\n};\nconst roomStyleState = {\n  roomStyles: [],\n  roomStyle: {}\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case LOAD_ROOM_STYLE:\n      return { ...state,\n        roomStyles: action.payload\n      };\n\n    case ADD_ROOM_STYLE:\n      return { ...state,\n        addMessage: action.payload.message\n      };\n\n    case LOAD_USER:\n      const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n        try {\n          const response = await axios.get(`${apiUrl}/auth`);\n\n          if (response.data.success) {\n            return { ...state,\n              isAuthenticated: true,\n              user: response.data.user\n            };\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          setAuthToken(null);\n          return { ...state,\n            isAuthenticated: false,\n            user: null\n          };\n        }\n      };\n\n      loadUser();\n      break;\n\n    case LOGIN:\n      return { ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status\n      };\n\n    default:\n      break;\n  }\n}\n\n_c = Reducer;\nexport { initState, roomStyleState };\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/bme/admin/frontend/src/context/Reducer.js"],"names":["setAuthToken","LOAD_USER","LOCAL_STORAGE_TOKEN_NAME","LOGIN","apiUrl","ADD_ROOM_STYLE","LOAD_ROOM_STYLE","axios","initState","user","isAuthenticated","loginStatus","loginMessage","addMessage","roomStyles","roomStyle","roomStyleState","Reducer","state","action","type","payload","message","loadUser","localStorage","response","get","data","success","error","removeItem","status"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SACEC,SADF,EAEEC,wBAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,eANF,QAOO,YAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,IADU;AAEhBC,EAAAA,eAAe,EAAE,KAFD;AAGhBC,EAAAA,WAAW,EAAE,KAHG;AAIhBC,EAAAA,YAAY,EAAE,EAJE;AAKhBC,EAAAA,UAAU,EAAE,EALI;AAMhBC,EAAAA,UAAU,EAAE,EANI;AAOhBC,EAAAA,SAAS,EAAE;AAPK,CAAlB;AAUA,MAAMC,cAAc,GAAG;AACrBF,EAAAA,UAAU,EAAE,EADS;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAvB;;AAKA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKd,eAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFd,OAAP;;AAKF,SAAKhB,cAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,UAAU,EAAEM,MAAM,CAACE,OAAP,CAAeC;AAFtB,OAAP;;AAKF,SAAKrB,SAAL;AACE,YAAMsB,QAAQ,GAAG,YAAY;AAC3B,YAAIC,YAAY,CAACtB,wBAAD,CAAhB,EACEF,YAAY,CAACwB,YAAY,CAACtB,wBAAD,CAAb,CAAZ;;AACF,YAAI;AACF,gBAAMuB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEtB,MAAO,OAApB,CAAvB;;AACA,cAAIqB,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,mBAAO,EACL,GAAGV,KADE;AAELR,cAAAA,eAAe,EAAE,IAFZ;AAGLD,cAAAA,IAAI,EAAEgB,QAAQ,CAACE,IAAT,CAAclB;AAHf,aAAP;AAKD;AACF,SATD,CASE,OAAOoB,KAAP,EAAc;AACdL,UAAAA,YAAY,CAACM,UAAb,CAAwB5B,wBAAxB;AACAF,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,iBAAO,EACL,GAAGkB,KADE;AAELR,YAAAA,eAAe,EAAE,KAFZ;AAGLD,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OArBD;;AAsBAc,MAAAA,QAAQ;AACR;;AACF,SAAKpB,KAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELR,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,YAAY,EAAEO,MAAM,CAACE,OAAP,CAAeC,OAHxB;AAILX,QAAAA,WAAW,EAAEQ,MAAM,CAACE,OAAP,CAAeU;AAJvB,OAAP;;AAOF;AACE;AAhDJ;AAkDD;;KAnDQd,O;AAqDT,SAAST,SAAT,EAAoBQ,cAApB;AACA,eAAeC,OAAf","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\r\nimport {\r\n  LOAD_USER,\r\n  LOCAL_STORAGE_TOKEN_NAME,\r\n  LOGIN,\r\n  apiUrl,\r\n  ADD_ROOM_STYLE,\r\n  LOAD_ROOM_STYLE,\r\n} from \"./constant\";\r\nimport axios from \"axios\";\r\nconst initState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loginStatus: false,\r\n  loginMessage: \"\",\r\n  addMessage: '',\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nconst roomStyleState = {\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nfunction Reducer(state, action) {\r\n  switch (action.type) {\r\n\r\n    case LOAD_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        roomStyles: action.payload\r\n      }\r\n\r\n    case ADD_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        addMessage: action.payload.message\r\n      };\r\n\r\n    case LOAD_USER:\r\n      const loadUser = async () => {\r\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\r\n          setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n        try {\r\n          const response = await axios.get(`${apiUrl}/auth`);\r\n          if (response.data.success) {\r\n            return {\r\n              ...state,\r\n              isAuthenticated: true,\r\n              user: response.data.user,\r\n            };\r\n          }\r\n        } catch (error) {\r\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n          setAuthToken(null);\r\n          return {\r\n            ...state,\r\n            isAuthenticated: false,\r\n            user: null,\r\n          };\r\n        }\r\n      };\r\n      loadUser();\r\n      break;\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loginMessage: action.payload.message,\r\n        loginStatus: action.payload.status,\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport { initState, roomStyleState };\r\nexport default Reducer;\r\n"]},"metadata":{},"sourceType":"module"}