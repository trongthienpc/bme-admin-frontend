{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl, ADD_ROOM_STYLE } from \"./constant\";\nimport axios from \"axios\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: \"\",\n  roomStyles: [],\n  roomStyle: {}\n};\nconst roomStyleState = {\n  roomStyles: [],\n  roomStyle: {}\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case ADD_ROOM_STYLE:\n      return { ...state,\n        roomStyles: [...state.roomStyles, action.payload]\n      };\n      break;\n\n    case LOAD_USER:\n      const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n        try {\n          const response = await axios.get(`${apiUrl}/auth`);\n\n          if (response.data.success) {\n            return { ...state,\n              isAuthenticated: true,\n              user: response.data.user\n            };\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          setAuthToken(null);\n          return { ...state,\n            isAuthenticated: false,\n            user: null\n          };\n        }\n      };\n\n      loadUser();\n      break;\n\n    case LOGIN:\n      return { ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status\n      };\n\n    default:\n      break;\n  }\n}\n\n_c = Reducer;\nexport { initState, roomStyleState };\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/thientt/Documents/coding-project/new-bme/bme-admin-frontend/src/context/Reducer.js"],"names":["setAuthToken","LOAD_USER","LOCAL_STORAGE_TOKEN_NAME","LOGIN","apiUrl","ADD_ROOM_STYLE","axios","initState","user","isAuthenticated","loginStatus","loginMessage","roomStyles","roomStyle","roomStyleState","Reducer","state","action","type","payload","loadUser","localStorage","response","get","data","success","error","removeItem","message","status"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SACEC,SADF,EAEEC,wBAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,QAMO,YANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,IADU;AAEhBC,EAAAA,eAAe,EAAE,KAFD;AAGhBC,EAAAA,WAAW,EAAE,KAHG;AAIhBC,EAAAA,YAAY,EAAE,EAJE;AAKhBC,EAAAA,UAAU,EAAE,EALI;AAMhBC,EAAAA,SAAS,EAAE;AANK,CAAlB;AASA,MAAMC,cAAc,GAAG;AACrBF,EAAAA,UAAU,EAAE,EADS;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAvB;;AAKA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,UAAU,EAAE,CAAC,GAAGI,KAAK,CAACJ,UAAV,EAAsBK,MAAM,CAACE,OAA7B;AAFP,OAAP;AAIA;;AAEF,SAAKlB,SAAL;AACE,YAAMmB,QAAQ,GAAG,YAAY;AAC3B,YAAIC,YAAY,CAACnB,wBAAD,CAAhB,EACEF,YAAY,CAACqB,YAAY,CAACnB,wBAAD,CAAb,CAAZ;;AACF,YAAI;AACF,gBAAMoB,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEnB,MAAO,OAApB,CAAvB;;AACA,cAAIkB,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,mBAAO,EACL,GAAGT,KADE;AAELP,cAAAA,eAAe,EAAE,IAFZ;AAGLD,cAAAA,IAAI,EAAEc,QAAQ,CAACE,IAAT,CAAchB;AAHf,aAAP;AAKD;AACF,SATD,CASE,OAAOkB,KAAP,EAAc;AACdL,UAAAA,YAAY,CAACM,UAAb,CAAwBzB,wBAAxB;AACAF,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,iBAAO,EACL,GAAGgB,KADE;AAELP,YAAAA,eAAe,EAAE,KAFZ;AAGLD,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OArBD;;AAsBAY,MAAAA,QAAQ;AACR;;AACF,SAAKjB,KAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,YAAY,EAAEM,MAAM,CAACE,OAAP,CAAeS,OAHxB;AAILlB,QAAAA,WAAW,EAAEO,MAAM,CAACE,OAAP,CAAeU;AAJvB,OAAP;;AAOF;AACE;AA1CJ;AA4CD;;KA7CQd,O;AA+CT,SAASR,SAAT,EAAoBO,cAApB;AACA,eAAeC,OAAf","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\nimport {\n  LOAD_USER,\n  LOCAL_STORAGE_TOKEN_NAME,\n  LOGIN,\n  apiUrl,\n  ADD_ROOM_STYLE,\n} from \"./constant\";\nimport axios from \"axios\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: \"\",\n  roomStyles: [],\n  roomStyle: {},\n};\n\nconst roomStyleState = {\n  roomStyles: [],\n  roomStyle: {},\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case ADD_ROOM_STYLE:\n      return {\n        ...state,\n        roomStyles: [...state.roomStyles, action.payload],\n      };\n      break;\n\n    case LOAD_USER:\n      const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\n          setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n        try {\n          const response = await axios.get(`${apiUrl}/auth`);\n          if (response.data.success) {\n            return {\n              ...state,\n              isAuthenticated: true,\n              user: response.data.user,\n            };\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          setAuthToken(null);\n          return {\n            ...state,\n            isAuthenticated: false,\n            user: null,\n          };\n        }\n      };\n      loadUser();\n      break;\n    case LOGIN:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status,\n      };\n\n    default:\n      break;\n  }\n}\n\nexport { initState, roomStyleState };\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}