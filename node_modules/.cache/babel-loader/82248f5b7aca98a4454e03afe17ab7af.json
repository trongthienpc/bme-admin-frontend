{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl } from \"./constant\";\nimport axios from \"axios\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: ''\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case LOAD_USER:\n      const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n        try {\n          const response = await axios.get(`${apiUrl}/auth`);\n\n          if (response.data.success) {\n            return { ...state,\n              isAuthenticated: true,\n              user: response.data.user\n            };\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          setAuthToken(null);\n          return { ...state,\n            isAuthenticated: false,\n            user: null\n          };\n        }\n      };\n\n      loadUser();\n      break;\n\n    case LOGIN:\n      return { ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status\n      };\n\n    default:\n      break;\n  }\n}\n\n_c = Reducer;\nexport { initState };\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/thientt/Documents/coding-project/new-bme/bme-admin-frontend/src/context/Reducer.js"],"names":["setAuthToken","LOAD_USER","LOCAL_STORAGE_TOKEN_NAME","LOGIN","apiUrl","axios","initState","user","isAuthenticated","loginStatus","loginMessage","Reducer","state","action","type","loadUser","localStorage","response","get","data","success","error","removeItem","payload","message","status"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAASC,SAAT,EAAoBC,wBAApB,EAA8CC,KAA9C,EAAqDC,MAArD,QAAmE,YAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,IADU;AAEhBC,EAAAA,eAAe,EAAE,KAFD;AAGhBC,EAAAA,WAAW,EAAE,KAHG;AAIhBC,EAAAA,YAAY,EAAE;AAJE,CAAlB;;AAOA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,SAAL;AACE,YAAMc,QAAQ,GAAG,YAAY;AAC3B,YAAIC,YAAY,CAACd,wBAAD,CAAhB,EACEF,YAAY,CAACgB,YAAY,CAACd,wBAAD,CAAb,CAAZ;;AACF,YAAI;AACF,gBAAMe,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEd,MAAO,OAApB,CAAvB;;AACA,cAAIa,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,mBAAO,EACL,GAAGR,KADE;AAELJ,cAAAA,eAAe,EAAE,IAFZ;AAGLD,cAAAA,IAAI,EAAEU,QAAQ,CAACE,IAAT,CAAcZ;AAHf,aAAP;AAKD;AACF,SATD,CASE,OAAOc,KAAP,EAAc;AACdL,UAAAA,YAAY,CAACM,UAAb,CAAwBpB,wBAAxB;AACAF,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,iBAAO,EACL,GAAGY,KADE;AAELJ,YAAAA,eAAe,EAAE,KAFZ;AAGLD,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OArBD;;AAsBAQ,MAAAA,QAAQ;AACR;;AACF,SAAKZ,KAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,YAAY,EAAEG,MAAM,CAACU,OAAP,CAAeC,OAHxB;AAILf,QAAAA,WAAW,EAAEI,MAAM,CAACU,OAAP,CAAeE;AAJvB,OAAP;;AAOF;AACE;AAnCJ;AAqCD;;KAtCQd,O;AAwCT,SAASL,SAAT;AACA,eAAeK,OAAf","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\nimport { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl } from \"./constant\";\nimport axios from \"axios\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: ''\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case LOAD_USER:\n      const loadUser = async () => {\n        if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\n          setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n        try {\n          const response = await axios.get(`${apiUrl}/auth`);\n          if (response.data.success) {\n            return {\n              ...state,\n              isAuthenticated: true,\n              user: response.data.user,\n            };\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          setAuthToken(null);\n          return {\n            ...state,\n            isAuthenticated: false,\n            user: null,\n          };\n        }\n      };\n      loadUser();\n      break;\n    case LOGIN:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status\n      };\n\n    default:\n      break;\n  }\n}\n\nexport { initState };\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}