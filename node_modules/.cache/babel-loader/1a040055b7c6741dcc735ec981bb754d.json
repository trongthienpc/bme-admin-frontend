{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl, ADD_ROOM_STYLE, LOAD_ROOM_STYLE, LOGOUT, DELETE_ROOM_STYLE, FIND_ROOM, UPDATE_ROOM } from \"./constant\";\nconst initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: \"\",\n  addMessage: \"\",\n  roomStyles: [],\n  roomStyle: {}\n};\nconst roomStyleState = {\n  roomStyles: [],\n  roomStyle: {}\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case UPDATE_ROOM:\n      return { ...state,\n        roomStyles: [...state.roomStyles]\n      };\n\n    case FIND_ROOM:\n      return { ...state,\n        roomStyle: action.payload\n      };\n\n    case DELETE_ROOM_STYLE:\n      return { ...state,\n        roomStyles: state.roomStyles.filter(room => room._id !== action.payload)\n      };\n\n    case LOAD_ROOM_STYLE:\n      return { ...state,\n        roomStyles: action.payload\n      };\n\n    case ADD_ROOM_STYLE:\n      return { ...state,\n        addMessage: action.payload.message\n      };\n\n    case LOAD_USER:\n      return { ...state,\n        isAuthenticated: action.payload.isAuthenticated,\n        user: action.payload.user\n      };\n\n    case LOGIN:\n      return { ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.success\n      };\n\n    case LOGOUT:\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      return { ...state,\n        isAuthenticated: false,\n        user: null\n      };\n\n    default:\n      break;\n  }\n}\n\n_c = Reducer;\n\nconst loadUser = async () => {\n  if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n  try {\n    const response = await axios.get(`${apiUrl}/auth`);\n\n    if (response.data.success) {\n      return { ...initState,\n        isAuthenticated: true,\n        user: response.data.user\n      };\n    }\n  } catch (error) {\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    setAuthToken(null);\n    return { ...initState,\n      isAuthenticated: false,\n      user: null\n    };\n  }\n};\n\nexport { initState, roomStyleState, loadUser };\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/bme/admin/frontend/src/context/Reducer.js"],"names":["axios","setAuthToken","LOAD_USER","LOCAL_STORAGE_TOKEN_NAME","LOGIN","apiUrl","ADD_ROOM_STYLE","LOAD_ROOM_STYLE","LOGOUT","DELETE_ROOM_STYLE","FIND_ROOM","UPDATE_ROOM","initState","user","isAuthenticated","loginStatus","loginMessage","addMessage","roomStyles","roomStyle","roomStyleState","Reducer","state","action","type","payload","filter","room","_id","message","success","localStorage","removeItem","loadUser","response","get","data","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport {\r\n  LOAD_USER,\r\n  LOCAL_STORAGE_TOKEN_NAME,\r\n  LOGIN,\r\n  apiUrl,\r\n  ADD_ROOM_STYLE,\r\n  LOAD_ROOM_STYLE,\r\n  LOGOUT,\r\n  DELETE_ROOM_STYLE,\r\n  FIND_ROOM,\r\n  UPDATE_ROOM,\r\n} from \"./constant\";\r\nconst initState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loginStatus: false,\r\n  loginMessage: \"\",\r\n  addMessage: \"\",\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nconst roomStyleState = {\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nfunction Reducer(state, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ROOM:\r\n      return {\r\n        ...state,\r\n        roomStyles: [...state.roomStyles],\r\n      };\r\n    case FIND_ROOM:\r\n      return {\r\n        ...state,\r\n        roomStyle: action.payload,\r\n      };\r\n    case DELETE_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        roomStyles: state.roomStyles.filter(\r\n          (room) => room._id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case LOAD_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        roomStyles: action.payload,\r\n      };\r\n\r\n    case ADD_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        addMessage: action.payload.message,\r\n      };\r\n\r\n    case LOAD_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        user: action.payload.user,\r\n      };\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loginMessage: action.payload.message,\r\n        loginStatus: action.payload.success,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst loadUser = async () => {\r\n  if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\r\n    setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/auth`);\r\n    if (response.data.success) {\r\n      return {\r\n        ...initState,\r\n        isAuthenticated: true,\r\n        user: response.data.user,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    setAuthToken(null);\r\n    return {\r\n      ...initState,\r\n      isAuthenticated: false,\r\n      user: null,\r\n    };\r\n  }\r\n};\r\n\r\nexport { initState, roomStyleState, loadUser };\r\nexport default Reducer;\r\n"]},"metadata":{},"sourceType":"module"}