{"ast":null,"code":"import { LOAD_USER, LOCAL_STORAGE_TOKEN_NAME, LOGIN, apiUrl, ADD_ROOM_STYLE, LOAD_ROOM_STYLE, LOGOUT, DELETE_ROOM_STYLE } from \"./constant\";\nlet initState = {\n  user: null,\n  isAuthenticated: false,\n  loginStatus: false,\n  loginMessage: \"\",\n  addMessage: '',\n  roomStyles: [],\n  roomStyle: {}\n};\nconst roomStyleState = {\n  roomStyles: [],\n  roomStyle: {}\n};\n\nfunction Reducer(state, action) {\n  switch (action.type) {\n    case DELETE_ROOM_STYLE:\n      return { ...state,\n        roomStyles: state.roomStyles.filter(room => room.id != payload)\n      };\n\n    case LOAD_ROOM_STYLE:\n      return { ...state,\n        roomStyles: action.payload\n      };\n\n    case ADD_ROOM_STYLE:\n      return { ...state,\n        addMessage: action.payload.message\n      };\n\n    case LOAD_USER:\n      // const loadUser = async () => {\n      //   if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\n      //     setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n      //   try {\n      //     const response = await axios.get(`${apiUrl}/auth`);\n      //     if (response.data.success) {\n      //       return {\n      //         ...state,\n      //         isAuthenticated: true,\n      //         user: response.data.user,\n      //       };\n      //     }\n      //   } catch (error) {\n      //     localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      //     setAuthToken(null);\n      //     return {\n      //       ...state,\n      //       isAuthenticated: false,\n      //       user: null,\n      //     };\n      //   }\n      // };\n      // loadUser();\n      return { ...state,\n        isAuthenticated: action.payload.isAuthenticated,\n        user: action.payload.user\n      };\n\n    case LOGIN:\n      return { ...state,\n        isAuthenticated: true,\n        loginMessage: action.payload.message,\n        loginStatus: action.payload.status\n      };\n\n    case LOGOUT:\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      return { ...state,\n        isAuthenticated: false,\n        user: null\n      };\n\n    default:\n      break;\n  }\n}\n\n_c = Reducer;\nexport { initState, roomStyleState };\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/bme/admin/frontend/src/context/Reducer.js"],"names":["LOAD_USER","LOCAL_STORAGE_TOKEN_NAME","LOGIN","apiUrl","ADD_ROOM_STYLE","LOAD_ROOM_STYLE","LOGOUT","DELETE_ROOM_STYLE","initState","user","isAuthenticated","loginStatus","loginMessage","addMessage","roomStyles","roomStyle","roomStyleState","Reducer","state","action","type","filter","room","id","payload","message","status","localStorage","removeItem"],"mappings":"AACA,SACEA,SADF,EAEEC,wBAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,MAPF,EAQEC,iBARF,QASO,YATP;AAUA,IAAIC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,IADQ;AAEdC,EAAAA,eAAe,EAAE,KAFH;AAGdC,EAAAA,WAAW,EAAE,KAHC;AAIdC,EAAAA,YAAY,EAAE,EAJA;AAKdC,EAAAA,UAAU,EAAE,EALE;AAMdC,EAAAA,UAAU,EAAE,EANE;AAOdC,EAAAA,SAAS,EAAE;AAPG,CAAhB;AAUA,MAAMC,cAAc,GAAG;AACrBF,EAAAA,UAAU,EAAE,EADS;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAvB;;AAKA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,CAAiBO,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWC,OAA3C;AAFP,OAAP;;AAKF,SAAKnB,eAAL;AAEE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACK;AAFd,OAAP;;AAKF,SAAKpB,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,UAAU,EAAEM,MAAM,CAACK,OAAP,CAAeC;AAFtB,OAAP;;AAKF,SAAKzB,SAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aAAO,EACL,GAAGkB,KADE;AAELR,QAAAA,eAAe,EAAES,MAAM,CAACK,OAAP,CAAed,eAF3B;AAGLD,QAAAA,IAAI,EAAEU,MAAM,CAACK,OAAP,CAAef;AAHhB,OAAP;;AAKF,SAAKP,KAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELR,QAAAA,eAAe,EAAE,IAFZ;AAGLE,QAAAA,YAAY,EAAEO,MAAM,CAACK,OAAP,CAAeC,OAHxB;AAILd,QAAAA,WAAW,EAAEQ,MAAM,CAACK,OAAP,CAAeE;AAJvB,OAAP;;AAMF,SAAKpB,MAAL;AACEqB,MAAAA,YAAY,CAACC,UAAb,CAAwB3B,wBAAxB;AACA,aAAO,EACL,GAAGiB,KADE;AAELR,QAAAA,eAAe,EAAE,KAFZ;AAGLD,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAMF;AACE;AAlEJ;AAoED;;KArEQQ,O;AAuET,SAAST,SAAT,EAAoBQ,cAApB;AACA,eAAeC,OAAf","sourcesContent":["\r\nimport {\r\n  LOAD_USER,\r\n  LOCAL_STORAGE_TOKEN_NAME,\r\n  LOGIN,\r\n  apiUrl,\r\n  ADD_ROOM_STYLE,\r\n  LOAD_ROOM_STYLE,\r\n  LOGOUT,\r\n  DELETE_ROOM_STYLE\r\n} from \"./constant\";\r\nlet initState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loginStatus: false,\r\n  loginMessage: \"\",\r\n  addMessage: '',\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nconst roomStyleState = {\r\n  roomStyles: [],\r\n  roomStyle: {},\r\n};\r\n\r\nfunction Reducer(state, action) {\r\n  switch (action.type) {\r\n    case DELETE_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        roomStyles: state.roomStyles.filter(room => room.id != payload)\r\n      }\r\n\r\n    case LOAD_ROOM_STYLE:\r\n\r\n      return {\r\n        ...state,\r\n        roomStyles: action.payload\r\n      }\r\n\r\n    case ADD_ROOM_STYLE:\r\n      return {\r\n        ...state,\r\n        addMessage: action.payload.message\r\n      };\r\n\r\n    case LOAD_USER:\r\n      // const loadUser = async () => {\r\n      //   if (localStorage[LOCAL_STORAGE_TOKEN_NAME])\r\n      //     setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n      //   try {\r\n      //     const response = await axios.get(`${apiUrl}/auth`);\r\n      //     if (response.data.success) {\r\n      //       return {\r\n      //         ...state,\r\n      //         isAuthenticated: true,\r\n      //         user: response.data.user,\r\n      //       };\r\n      //     }\r\n      //   } catch (error) {\r\n      //     localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      //     setAuthToken(null);\r\n      //     return {\r\n      //       ...state,\r\n      //       isAuthenticated: false,\r\n      //       user: null,\r\n      //     };\r\n      //   }\r\n      // };\r\n      // loadUser();\r\n\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        user: action.payload.user\r\n      }\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loginMessage: action.payload.message,\r\n        loginStatus: action.payload.status,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME)\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null\r\n      }\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport { initState, roomStyleState };\r\nexport default Reducer;\r\n"]},"metadata":{},"sourceType":"module"}