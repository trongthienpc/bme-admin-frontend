{"ast":null,"code":"var _jsxFileName = \"D:\\\\bme\\\\admin\\\\frontend\\\\src\\\\components\\\\views\\\\pages\\\\room\\\\roomStyle.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useStore } from \"../../../../context\";\nimport { addRoomStyle, loadRoomStyle } from \"../../../../context/actions\";\nimport { apiUrl } from \"../../../../context/constant\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Modal, Row, Card } from \"react-bootstrap\";\nimport FileBase64 from 'react-file-base64';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomStyle = () => {\n  _s();\n\n  const [state, dispatch] = useStore();\n  const [imageState, setImageState] = useState(''); //check authenticated\n\n  const {\n    isAuthenticated,\n    roomStyles\n  } = state;\n\n  if (isAuthenticated) {} else {} // list all room style\n\n\n  const getRooms = async () => {\n    try {\n      const res = axios.get(`${apiUrl}/rooms/all`).then(response => {\n        dispatch(loadRoomStyle(response.data));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n  const [lgShow, setlgShow] = useState(false); // const handleImage = (event) => {\n  //     const file = event.target.files[0];\n  //     setImageState(file);\n  // };\n\n  const [roomState, setRoomState] = useState({\n    name: \"\",\n    description: \"This is description for room style\",\n    image: '',\n    max: \"persons\",\n    bed: \"bed\"\n  });\n\n  const handleChange = e => {\n    setRoomState({ ...roomState,\n      [e.target.name]: e.target.value\n    });\n  }; // add new room style\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"imageState: \", imageState);\n    if (!imageState) toast.warn(\"Input your message\");else {\n      // console.log(\"imageState: \", imageState)\n      const formData = new FormData();\n      formData.append(\"name\", roomState.name);\n      formData.append(\"description\", roomState.description);\n      formData.append(\"max\", roomState.max);\n      formData.append(\"bed\", roomState.bed);\n      formData.append(\"image\", imageState);\n      roomState.image = imageState;\n\n      try {\n        const response = await axios.post(`${apiUrl}/rooms/add`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.data.status) toast.success(response.data.message);\n        dispatch(addRoomStyle(response.data));\n        setlgShow(false);\n        getRooms();\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n  }; // delete room \n\n\n  const handleDelete = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mb-2\",\n      onClick: () => setlgShow(true),\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: roomStyles.map((room, index) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: room.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: room.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: room.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-primary m-2\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-warning m-2\",\n              onClick: handleDelete(room._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: lgShow,\n      onHide: () => setlgShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(roomState, null, '\\t')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          method: \"post\" // encType=\"multipart/form-data\"\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              name: \"name\",\n              value: roomState.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"description\",\n              value: roomState.description,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicMax\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Max person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"max\",\n              value: roomState.max,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicBed\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Number formBasicBed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"bed\",\n              value: roomState.bed,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FileBase64, {\n              type: \"file\",\n              multiple: false,\n              onDone: _ref => {\n                let {\n                  base64\n                } = _ref;\n                return setImageState(base64);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: imageState ? false : true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"md\",\n      show: mdShow,\n      onHide: () => setMdShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomStyle, \"VU702gr7kPpM3msSmv/yediWkTU=\", false, function () {\n  return [useStore];\n});\n\n_c = RoomStyle;\nexport default RoomStyle;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomStyle\");","map":{"version":3,"sources":["D:/bme/admin/frontend/src/components/views/pages/room/roomStyle.js"],"names":["axios","React","useState","useEffect","Form","Button","Col","useStore","addRoomStyle","loadRoomStyle","apiUrl","toast","ToastContainer","Modal","Row","Card","FileBase64","RoomStyle","state","dispatch","imageState","setImageState","isAuthenticated","roomStyles","getRooms","res","get","then","response","data","error","console","log","lgShow","setlgShow","roomState","setRoomState","name","description","image","max","bed","handleChange","e","target","value","handleSubmit","preventDefault","warn","formData","FormData","append","post","headers","status","success","message","handleDelete","map","room","index","_id","JSON","stringify","base64","mdShow","setMdShow"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useStore } from \"../../../../context\";\r\nimport { addRoomStyle, loadRoomStyle } from \"../../../../context/actions\";\r\nimport { apiUrl } from \"../../../../context/constant\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Modal, Row, Card } from \"react-bootstrap\";\r\nimport FileBase64 from 'react-file-base64';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst RoomStyle = () => {\r\n    const [state, dispatch] = useStore();\r\n\r\n    const [imageState, setImageState] = useState('');\r\n\r\n    //check authenticated\r\n\r\n    const { isAuthenticated, roomStyles } = state;\r\n\r\n    if (isAuthenticated) {\r\n    } else {\r\n    }\r\n\r\n    // list all room style\r\n    const getRooms = async () => {\r\n        try {\r\n            const res = axios.get(`${apiUrl}/rooms/all`)\r\n                .then((response) => {\r\n                    dispatch(loadRoomStyle(response.data));\r\n                })\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRooms();\r\n    }, []);\r\n\r\n    const [lgShow, setlgShow] = useState(false);\r\n\r\n    // const handleImage = (event) => {\r\n    //     const file = event.target.files[0];\r\n    //     setImageState(file);\r\n    // };\r\n\r\n    const [roomState, setRoomState] = useState({\r\n        name: \"\",\r\n        description: \"This is description for room style\",\r\n        image: '',\r\n        max: \"persons\",\r\n        bed: \"bed\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setRoomState({\r\n            ...roomState,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    // add new room style\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"imageState: \", imageState)\r\n        if (!imageState) toast.warn(\"Input your message\");\r\n        else {\r\n            // console.log(\"imageState: \", imageState)\r\n            const formData = new FormData();\r\n            formData.append(\"name\", roomState.name);\r\n            formData.append(\"description\", roomState.description);\r\n            formData.append(\"max\", roomState.max);\r\n            formData.append(\"bed\", roomState.bed);\r\n            formData.append(\"image\", imageState);\r\n            roomState.image = imageState\r\n            try {\r\n                const response = await axios.post(`${apiUrl}/rooms/add`, formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.data.status) toast.success(response.data.message);\r\n                dispatch(addRoomStyle(response.data));\r\n                setlgShow(false)\r\n                getRooms()\r\n            } catch (error) {\r\n                console.log(\"Error: \", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // delete room \r\n    const handleDelete = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-secondary mb-2\" onClick={() => setlgShow(true)}>Add New</button>\r\n\r\n            <Row xs={1} md={2} className=\"g-4\">\r\n                {roomStyles.map((room, index) => (\r\n                    <Col key={index}>\r\n                        <Card className=\"mb-2\">\r\n                            <Card.Img variant=\"top\" src={room.image} />\r\n                            <Card.Body>\r\n                                <Card.Title>{room.name}</Card.Title>\r\n                                <Card.Text>\r\n                                    {room.description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer className=\"d-flex justify-content-between\">\r\n                                <Button className=\"btn btn-primary m-2\">Edit</Button>\r\n                                <Button className=\"btn btn-warning m-2\" onClick={handleDelete(room._id)}>Delete</Button>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n\r\n\r\n\r\n\r\n            {/* modal add new room */}\r\n            <Modal size=\"lg\" show={lgShow} onHide={() => setlgShow(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {/* Add new room style */}\r\n                        <pre>{JSON.stringify(roomState, null, '\\t')}</pre>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        onSubmit={handleSubmit}\r\n                        method=\"post\"\r\n                    // encType=\"multipart/form-data\"\r\n                    >\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter name\"\r\n                                name=\"name\"\r\n                                value={roomState.name}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                name=\"description\"\r\n                                value={roomState.description}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicMax\">\r\n                            <Form.Label>Max person</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"max\"\r\n                                value={roomState.max}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicBed\">\r\n                            <Form.Label>Number formBasicBed</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"bed\"\r\n                                value={roomState.bed}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            {/* <Form.Label>Image</Form.Label> */}\r\n                            {/* <Form.Control type=\"file\" name=\"image\" onChange={handleImage} /> */}\r\n                            <FileBase64\r\n                                type=\"file\"\r\n                                multiple={false}\r\n                                onDone={({ base64 }) => setImageState(base64)} />\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            type=\"submit\"\r\n                            disabled={imageState ? false : true}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* modal delete room  */}\r\n            <Modal size=\"md\" show={mdShow} onHide={() => setMdShow(false)}>\r\n\r\n            </Modal>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomStyle;\r\n"]},"metadata":{},"sourceType":"module"}